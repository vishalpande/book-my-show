{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pande\\\\OneDrive\\\\Desktop\\\\Book-My-Show\\\\book-my-show\\\\src\\\\Context\\\\BsState.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport BsContext from \"./BsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BsState = props => {\n  _s();\n  const [errorPopup, setErrorPopup] = useState(false);\n\n  //error message\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // time slot which the user selects.\n  const [time, changeTime] = useState(\"\");\n  const [movie, changeMovie] = useState(\"\");\n\n  // No of seats which the user selects.\n  const [noOfSeat, changeNoOfSeats] = useState({\n    A1: \"\",\n    A2: \"\",\n    A3: \"\",\n    A4: \"\",\n    D1: \"\",\n    D2: \"\"\n  });\n\n  // Last movie booking details.\n  const [lastBookingDetails, setLastBookingDetails] = useState(null);\n\n  // handling post request to save booking details on the backend\n  const handlePostBooking = async () => {\n    // Sending api request to backend with user selected movie, slot and seats to book movie.\n    const response = await fetch(`https://ap-southeast-1.aws.data.mongodb-api.com/app/data-mxkpp/endpoint/data/v1`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        movie: movie,\n        slot: time,\n        seats: noOfSeat\n      })\n    });\n    const data = await response.json();\n\n    //showing message from backend on popup to user whether success or error\n    setErrorPopup(true);\n    setErrorMessage(data.message);\n    if (response.status === 200) {\n      //reset the state on success\n      changeTime(\"\");\n      changeMovie(\"\");\n      changeNoOfSeats({\n        A1: \"\",\n        A2: \"\",\n        A3: \"\",\n        A4: \"\",\n        D1: \"\",\n        D2: \"\"\n      });\n      setLastBookingDetails(data.data);\n\n      //clearing the local storage when booking is successfull\n      window.localStorage.clear();\n    }\n  };\n\n  //handle get request to get the last booking details from backend\n  const handleGetLastBooking = async () => {\n    const response = await fetch(`https://ap-southeast-1.aws.data.mongodb-api.com/app/data-mxkpp/endpoint/data/v1`, {\n      method: \"GET\"\n    });\n    const data = await response.json();\n\n    // Setting last booking details recieved from the backend.\n    setLastBookingDetails(data.data);\n  };\n  useEffect(() => {\n    //getting movies, slot and seats from localstorage and updating state (useful when page refreshes)\n    const movie = window.localStorage.getItem(\"movie\");\n    const slot = window.localStorage.getItem(\"slot\");\n    const seats = JSON.parse(window.localStorage.getItem(\"seats\"));\n    if (movie) {\n      changeMovie(movie);\n    }\n    if (slot) {\n      changeTime(slot);\n    }\n    if (seats) {\n      changeNoOfSeats(seats);\n    }\n  }, []);\n  return (\n    /*#__PURE__*/\n    // providing all the required data to app\n    _jsxDEV(BsContext.Provider, {\n      value: {\n        handlePostBooking,\n        handleGetLastBooking,\n        movie,\n        changeMovie,\n        time,\n        changeTime,\n        noOfSeat,\n        changeNoOfSeats,\n        lastBookingDetails,\n        errorPopup,\n        setErrorPopup,\n        errorMessage,\n        setErrorMessage\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(BsState, \"IUXhLKf6qlT7xhCYK4GygWstvKw=\");\n_c = BsState;\nexport default BsState;\nvar _c;\n$RefreshReg$(_c, \"BsState\");","map":{"version":3,"names":["React","useState","useEffect","BsContext","jsxDEV","_jsxDEV","BsState","props","_s","errorPopup","setErrorPopup","errorMessage","setErrorMessage","time","changeTime","movie","changeMovie","noOfSeat","changeNoOfSeats","A1","A2","A3","A4","D1","D2","lastBookingDetails","setLastBookingDetails","handlePostBooking","response","fetch","method","headers","body","JSON","stringify","slot","seats","data","json","message","status","window","localStorage","clear","handleGetLastBooking","getItem","parse","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/pande/OneDrive/Desktop/Book-My-Show/book-my-show/src/Context/BsState.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BsContext from \"./BsContext\";\n\nconst BsState = (props) => {\n  \n  const [errorPopup, setErrorPopup] = useState(false);\n\n  //error message\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  // time slot which the user selects.\n  const [time, changeTime] = useState(\"\");\n\n \n  const [movie, changeMovie] = useState(\"\");\n\n  // No of seats which the user selects.\n  const [noOfSeat, changeNoOfSeats] = useState({\n    A1: \"\",\n    A2: \"\",\n    A3: \"\",\n    A4: \"\",\n    D1: \"\",\n    D2: \"\",\n  });\n\n  // Last movie booking details.\n  const [lastBookingDetails, setLastBookingDetails] = useState(null);\n\n  // handling post request to save booking details on the backend\n  const handlePostBooking = async () => {\n    // Sending api request to backend with user selected movie, slot and seats to book movie.\n    const response = await fetch(\n      `https://ap-southeast-1.aws.data.mongodb-api.com/app/data-mxkpp/endpoint/data/v1`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ movie: movie, slot: time, seats: noOfSeat }),\n      }\n    );\n\n    const data = await response.json();\n\n    //showing message from backend on popup to user whether success or error\n    setErrorPopup(true);\n    setErrorMessage(data.message);\n\n    if (response.status === 200) {\n      //reset the state on success\n      changeTime(\"\");\n      changeMovie(\"\");\n      changeNoOfSeats({\n        A1: \"\",\n        A2: \"\",\n        A3: \"\",\n        A4: \"\",\n        D1: \"\",\n        D2: \"\",\n      });\n      setLastBookingDetails(data.data);\n\n      //clearing the local storage when booking is successfull\n      window.localStorage.clear();\n    }\n  };\n\n  //handle get request to get the last booking details from backend\n  const handleGetLastBooking = async () => {\n    const response = await fetch(\n      `https://ap-southeast-1.aws.data.mongodb-api.com/app/data-mxkpp/endpoint/data/v1`,\n      {\n        method: \"GET\",\n      }\n    );\n\n    const data = await response.json();\n\n    // Setting last booking details recieved from the backend.\n    setLastBookingDetails(data.data);\n  };\n\n  useEffect(() => {\n    //getting movies, slot and seats from localstorage and updating state (useful when page refreshes)\n    const movie = window.localStorage.getItem(\"movie\");\n    const slot = window.localStorage.getItem(\"slot\");\n    const seats = JSON.parse(window.localStorage.getItem(\"seats\"));\n\n    if(movie){\n      changeMovie(movie);\n    }\n    if(slot){\n      changeTime(slot);\n    }\n    if(seats){\n      changeNoOfSeats(seats);\n    }\n  }, []);\n\n  return (\n    // providing all the required data to app\n    <BsContext.Provider\n      value={{\n        handlePostBooking,\n        handleGetLastBooking,\n        movie,\n        changeMovie,\n        time,\n        changeTime,\n        noOfSeat,\n        changeNoOfSeats,\n        lastBookingDetails,\n        errorPopup,\n        setErrorPopup,\n        errorMessage,\n        setErrorMessage,\n      }}>\n      {props.children}\n    </BsContext.Provider>\n  );\n};\n\nexport default BsState;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}